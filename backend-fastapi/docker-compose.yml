version: '3.8'

services:
  backend:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      # Core settings
      - APP_ENV=${APP_ENV:-dev}
      - SECRET_KEY=${SECRET_KEY:-supersecretkey}
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-jwtsupersecretkey}
      - JWT_ALGORITHM=${JWT_ALGORITHM:-HS256}
      - JWT_ACCESS_TOKEN_EXPIRE_MINUTES=${JWT_ACCESS_TOKEN_EXPIRE_MINUTES:-30}
      
      # Database settings
      - POSTGRES_HOST=${POSTGRES_HOST:-postgres}
      - POSTGRES_PORT=${POSTGRES_PORT:-5432}
      - POSTGRES_USER=${POSTGRES_USER:-neuronest}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-neuronestpassword}
      - POSTGRES_DB=${POSTGRES_DB:-neuronest_db}
      - USE_POSTGRES=${USE_POSTGRES:-true}
      
      # Redis settings
      - REDIS_HOST=${REDIS_HOST:-redis}
      - REDIS_PORT=${REDIS_PORT:-6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
      - REDIS_DB=${REDIS_DB:-0}
      - USE_REDIS=${USE_REDIS:-true}
      
      # Firebase/Supabase settings
      - FIREBASE_CREDENTIALS=${FIREBASE_CREDENTIALS}
      - FIREBASE_WEB_API_KEY=${FIREBASE_WEB_API_KEY}
      - USE_SUPABASE=${USE_SUPABASE:-false}
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      
      # AI Providers
      - DEFAULT_AI_PROVIDER=${DEFAULT_AI_PROVIDER:-gemini}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      
      # Code Execution
      - ENABLE_CODE_EXECUTION=${ENABLE_CODE_EXECUTION:-false}
      - DOCKER_BASE_IMAGE=${DOCKER_BASE_IMAGE:-python:3.10-slim}
      - DOCKER_NETWORK=${DOCKER_NETWORK:-none}
      - DOCKER_TIMEOUT=${DOCKER_TIMEOUT:-30}
      - DOCKER_MEMORY_LIMIT=${DOCKER_MEMORY_LIMIT:-512m}
      
      # File Storage
      - UPLOAD_DIR=${UPLOAD_DIR:-./static/uploads}
      - PROJECTS_DIR=${PROJECTS_DIR:-./static/projects}
      - MAX_UPLOAD_SIZE=${MAX_UPLOAD_SIZE:-10485760}
      
      # Speech Recognition
      - ENABLE_SPEECH_RECOGNITION=${ENABLE_SPEECH_RECOGNITION:-true}
      - SPEECH_RECOGNITION_PROVIDER=${SPEECH_RECOGNITION_PROVIDER:-google}
      
      # Logging
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
      - LOG_FORMAT=${LOG_FORMAT:-json}
    depends_on:
      - postgres
      - redis
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=${POSTGRES_USER:-neuronest}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-neuronestpassword}
      - POSTGRES_DB=${POSTGRES_DB:-neuronest_db}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U neuronest -d neuronest_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data: